import React, { useState } from 'react';
import { Outlet, useNavigate, NavLink } from 'react-router-dom';

import useAuthCheck from "../../hooks/useAuthCheck";
import Sidebar from '../../components/Sidebar'; // Certifique-se que este Sidebar aceita a prop 'isOpen'
import { logoutUser } from '../../services/authService';

import './index.css'; // Seu CSS principal
// import './HeaderButton.css'; // Criaremos este arquivo para o botão

const LogoSvg = () => (
  <svg width="268" height="56" viewBox="0 0 268 56" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g clipPath="url(#clip0_8801_1038)">
    <path d="M36.5789 34.5071H62.805V27.6064H33.4727L36.5789 34.5071Z" fill="white"/>
    <path d="M30.366 20.7053H62.8046V13.8047H27.2598L30.366 20.7053Z" fill="white"/>
    <path d="M62.8062 0H21.0527L24.1552 6.90063H62.8062V0Z" fill="white"/>
    <path d="M21.7398 55.2123H28.6442L22.4317 41.411H39.6852L36.579 34.5067H19.3255L16.2193 27.606H33.4727L30.3665 20.7054H13.1131L10.0068 13.8048H27.2603L24.1541 6.90039H0L21.7398 55.2123Z" fill="white"/>
    <path d="M83.5808 14.4219H79.9707V42.1786H85.1264V30.6788H99.1232V25.9217H85.1264V19.1827H100.71V14.4219H85.1264H83.5808Z" fill="white"/>
    <path d="M122.795 23.1833C121.923 22.3371 120.911 21.6828 119.764 21.2203C118.614 20.7577 117.327 20.5283 115.898 20.5283C114.605 20.5283 113.349 20.7991 112.13 21.3406C110.916 21.8821 109.844 22.638 108.919 23.6007C107.994 24.5672 107.253 25.7217 106.696 27.0717C106.14 28.4217 105.865 29.9147 105.865 31.5543C105.865 33.1939 106.144 34.653 106.696 36.0143C107.253 37.3756 107.99 38.5452 108.919 39.5229C109.844 40.5007 110.916 41.2603 112.13 41.8018C113.345 42.3433 114.601 42.6141 115.898 42.6141C117.327 42.6141 118.614 42.3772 119.764 41.8996C120.915 41.422 121.927 40.7639 122.795 39.9178L123.589 42.1779H127.951V20.9645H122.795V23.1833ZM122.378 34.0513C122.1 34.8184 121.705 35.4841 121.19 36.0519C120.674 36.6198 120.054 37.0635 119.324 37.3794C118.598 37.6953 117.797 37.857 116.925 37.857C116.053 37.857 115.214 37.699 114.488 37.3794C113.762 37.0635 113.138 36.6198 112.623 36.0519C112.108 35.4841 111.713 34.8184 111.435 34.0513C111.156 33.2841 111.017 32.4531 111.017 31.5543C111.017 30.6555 111.156 29.862 111.435 29.0949C111.713 28.3277 112.108 27.6621 112.623 27.0943C113.138 26.5264 113.759 26.0827 114.488 25.7668C115.214 25.4509 116.026 25.2892 116.925 25.2892C117.824 25.2892 118.598 25.4471 119.324 25.7668C120.05 26.0827 120.674 26.5264 121.19 27.0943C121.705 27.6621 122.1 28.3315 122.378 29.0949C122.656 29.862 122.795 30.6818 122.795 31.5543C122.795 32.4267 122.656 33.2841 122.378 34.0513Z" fill="white"/>
    <path d="M151.384 23.1043C150.564 22.2845 149.586 21.6527 148.45 21.2015C147.315 20.754 146.059 20.5283 144.682 20.5283C143.306 20.5283 142.144 20.7652 141.035 21.2428C139.925 21.7204 139 22.3785 138.259 23.2246L137.466 20.9645H133.104V42.1779H138.259V30.1253C138.259 28.4857 138.733 27.1657 139.688 26.1616C140.64 25.1576 141.907 24.6537 143.494 24.6537C145.081 24.6537 146.393 25.1576 147.36 26.1616C148.326 27.1657 148.808 28.4894 148.808 30.1253V42.1779H153.963V29.926C153.963 28.4969 153.738 27.2108 153.29 26.0601C152.839 24.9094 152.207 23.9241 151.387 23.1043H151.384Z" fill="white"/>
    <path d="M176.045 23.1833C175.173 22.3371 174.161 21.6828 173.011 21.2203C171.86 20.7577 170.574 20.5283 169.145 20.5283C167.847 20.5283 166.595 20.7991 165.377 21.3406C164.162 21.8821 163.09 22.638 162.165 23.6007C161.24 24.5672 160.499 25.7217 159.946 27.0717C159.39 28.4217 159.115 29.9147 159.115 31.5543C159.115 33.1939 159.394 34.653 159.946 36.0143C160.503 37.3756 161.24 38.5452 162.165 39.5229C163.09 40.5007 164.162 41.2603 165.377 41.8018C166.591 42.3433 167.847 42.6141 169.145 42.6141C170.574 42.6141 171.86 42.3772 173.011 41.8996C174.161 41.422 175.173 40.7639 176.045 39.9178L176.839 42.1779H181.201V20.9645H176.045V23.1833ZM175.632 34.0513C175.353 34.8184 174.958 35.4841 174.443 36.0519C173.928 36.6198 173.308 37.0635 172.582 37.3794C171.856 37.6953 171.055 37.857 170.183 37.857C169.31 37.857 168.472 37.699 167.746 37.3794C167.02 37.0635 166.399 36.6198 165.884 36.0519C165.369 35.4841 164.974 34.8184 164.696 34.0513C164.418 33.2841 164.278 32.4531 164.278 31.5543C164.278 30.6555 164.418 29.862 164.696 29.0949C164.974 28.3277 165.369 27.6621 165.884 27.0943C166.399 26.5264 167.02 26.0827 167.746 25.7668C168.472 25.4509 169.288 25.2892 170.183 25.2892C171.078 25.2892 171.856 25.4471 172.582 25.7668C173.308 26.0827 173.928 26.5264 174.443 27.0943C174.958 27.6621 175.353 28.3315 175.632 29.0949C175.91 29.862 176.049 30.6818 176.049 31.5543C176.049 32.4267 175.91 33.2841 175.632 34.0513Z" fill="white"/>
    <path d="M197.737 38.0566C196.785 38.0566 196.037 37.7971 195.495 37.2819C194.954 36.7667 194.683 35.8078 194.683 34.4051V24.9285H202.892V20.9648H194.683V15.0156H189.527V20.9648H186.354V24.9285H189.527V34.4051C189.527 37.1277 190.137 39.1772 191.351 40.5498C192.566 41.9262 194.563 42.6106 197.338 42.6106C199.346 42.6106 201.712 42.2797 204.434 41.6178V36.6614C203.084 37.0036 201.843 37.3233 200.708 37.6128C199.572 37.9061 198.579 38.0491 197.733 38.0491L197.737 38.0566Z" fill="white"/>
    <path d="M214.749 20.9648H209.594V42.1782H214.749V20.9648Z" fill="white"/>
    <path d="M212.17 12.5977C211.271 12.5977 210.549 12.8609 210.008 13.3911C209.466 13.9214 209.195 14.6359 209.195 15.5309C209.195 16.4259 209.466 17.1517 210.008 17.6932C210.549 18.2347 211.271 18.5055 212.17 18.5055C213.069 18.5055 213.787 18.2347 214.332 17.6932C214.874 17.1517 215.145 16.4297 215.145 15.5309C215.145 14.6321 214.874 13.9176 214.332 13.3911C213.791 12.8647 213.069 12.5977 212.17 12.5977Z" fill="white"/>
    <path d="M238.932 23.5819C237.955 22.6041 236.785 21.852 235.424 21.3218C234.063 20.7916 232.562 20.5283 230.922 20.5283C229.283 20.5283 227.752 20.7916 226.402 21.3218C225.056 21.852 223.898 22.6041 222.931 23.5819C221.965 24.5596 221.22 25.7217 220.69 27.0717C220.16 28.4217 219.896 29.926 219.896 31.5919C219.896 33.2578 220.16 34.7658 220.69 36.1121C221.22 37.4621 221.965 38.6166 222.931 39.5831C223.898 40.5495 225.052 41.2941 226.402 41.8244C227.752 42.3546 229.257 42.6178 230.922 42.6178C232.588 42.6178 234.063 42.3546 235.424 41.8244C236.785 41.2979 237.955 40.5495 238.932 39.5831C239.91 38.6166 240.662 37.4621 241.193 36.1121C241.723 34.7658 241.986 33.2578 241.986 31.5919C241.986 29.926 241.723 28.4217 241.193 27.0717C240.662 25.7254 239.91 24.5596 238.932 23.5819ZM236.417 34.0889C236.138 34.8561 235.743 35.5217 235.228 36.0933C234.713 36.6611 234.093 37.1124 233.363 37.4396C232.637 37.7705 231.821 37.9359 230.926 37.9359C230.031 37.9359 229.215 37.7705 228.489 37.4396C227.764 37.1086 227.143 36.6611 226.628 36.0933C226.113 35.5254 225.71 34.8561 225.417 34.0889C225.127 33.3217 224.981 32.4907 224.981 31.5919C224.981 30.6931 225.127 29.8545 225.417 29.0761C225.707 28.2976 226.113 27.6207 226.628 27.0529C227.143 26.485 227.764 26.0413 228.489 25.7254C229.215 25.4095 230.031 25.2478 230.926 25.2478C231.821 25.2478 232.637 25.4058 233.363 25.7254C234.089 26.0413 234.713 26.485 235.228 27.0529C235.743 27.6207 236.138 28.2976 236.417 29.0761C236.695 29.8545 236.834 30.6969 236.834 31.5919C236.834 32.4869 236.695 33.3217 236.417 34.0889Z" fill="white"/>
    <path d="M267.325 26.0601C266.874 24.9094 266.242 23.9241 265.423 23.1043C264.603 22.2845 263.625 21.6527 262.489 21.2015C261.354 20.754 260.098 20.5283 258.721 20.5283C257.345 20.5283 256.183 20.7652 255.074 21.2428C253.964 21.7204 253.039 22.3785 252.298 23.2246L251.505 20.9645H247.143V42.1779H252.298V30.1253C252.298 28.4857 252.772 27.1657 253.727 26.1616C254.679 25.1576 255.946 24.6537 257.533 24.6537C259.12 24.6537 260.432 25.1576 261.399 26.1616C262.365 27.1657 262.847 28.4894 262.847 30.1253V42.1779H268.002V29.926C268.002 28.4969 267.777 27.2108 267.329 26.0601H267.325Z" fill="white"/>
    </g>
    <defs>
    <clipPath id="clip0_8801_1038">
    <rect width="268" height="55.2125" fill="white"/>
    </clipPath>
    </defs>
  </svg>
)

export default function MainLayout() {
  const loading = useAuthCheck();
  const navigate = useNavigate();
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);

  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };

  function handleLogout() {
    logoutUser()
      .then(() => {
        navigate('/login');
      })
      .catch((error) => {
        console.error('Erro ao fazer logout:', error);
      });
  }

  if (loading) return <div className="loading">Loading...</div>;

  return (
    <>
      <div className='app-header'>
        <button
          className="sidebar-toggle-button"
          onClick={toggleSidebar}
          aria-label={isSidebarOpen ? "Fechar menu lateral" : "Abrir menu lateral"}
          aria-expanded={isSidebarOpen}
        >
          &#9776; {/* Ícone de hambúrguer */}
        </button>
        <LogoSvg />
      </div>
      <div className="main-content">
        <Sidebar
          isOpen={isSidebarOpen} // Passa o estado para a Sidebar
          footer={
            <NavLink onClick={handleLogout} to="/login" className="sidebar-link">Sair</NavLink>
          }
        >
          <NavLink to="/pecas" className="sidebar-link">Peças</NavLink>
          <NavLink to="/montagem" className="sidebar-link">Visualização</NavLink>
          <NavLink to="/clientes" className="sidebar-link">Clientes</NavLink>
        </Sidebar>
        <div className='main-content-body'>
          <Outlet />
        </div>
      </div>
    </>
  )
}